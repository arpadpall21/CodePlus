For Company software proprietary reasons I cannot name packages or other tools used by my company, so I'll refer them as A, B, etc... in my description


CV (Computer Vision) Description
- It's a complete containerised solution specialized for image and video processing
- supported features by CV: Document recognition, Human face recognition, face and hand gesture recognition (for liveness checking), reading id document for text recognition (text area cropping, text recognition), and more awesome CV tools that I developed but actualy cannot talk about here :)
- the container includes Http servers, image storage solution, serveral image processing neural networks integrated in multiple processes
- the supervisor supervises processes ruinning in the contianer, and the 'A' load distributor is responsible to balance the traffic load
- within the container processes are comunicating with each other as rpc client|server
- the video stream is handled by WebRtc, all incomming frames are stored by the storage solution in a specific way in order to not to overload the sotorage engine
- the project also includes a manualtest frontend page which is half public for customer demo only
- in one task severeal processes are included, ex: for the document text recognition pipeline included: the storeage process, the htttp rocess (obviously), a process including a neural netwrok making images 'more readable', another process which crop text areas using a specialized neural network, an another process which acually reads the text again with another neural network, on top of that there's custom text correction an area crop logig to correct potential mistakes

My role for this project: 
    - I develop new or optimalize existing features (according to requested tasks)
    - Integrate and performance test neural netwokrs in the project 
    - Updating tests to keep the code coverage above 80%
    - besiede my direct architect and the company CTO I'm the only developer working in this project 


Problem that I've solved in CV:
    1) - when I received the project the test code coverage was below 70%, I successfully raised this above 80%, so all features are automatically tested new 
    
    2) - I received chunky task with multiple points where:
        - all character recognition processes must be integrated in one sigle process
        - a new customized character recognition neural network must be integrated (in order to swap the old character recognition package)
        - the 'old' character recogtion package had to be completely removed from the project
    Challenges are: 
        - a CV task consist of multiple neural network layer, so how to reorganize this in readable way
        - the new characther recognition neural newtork is not a package as before, so the neural network model has to be booted in a separate process where it's used (performance reasons)
        - another endpoint uses the 'old' character recognition package, so we need a way to use it with new character recognition neurla network 
    Solutions, further problems and solutions:
        - I came up with the solution to use the new character recognition process as a router for all character recogtion tasks, benefits of doing this: here we can boot up and use all character recognition neural newtroks, it's scalable if we want to use new or swap networks, in this process can import all dependencies that task pipelines need, the process number is scalable from the supervisor so it's easy to adjust all character recognition needs 
        - swapping a package by a neural network present a new problem, it's easy to import a package and use it as we like, but a neural network has to be booted up first, so booting up a newural network and passing it all over the place it's just very ugly an unreadable, my solution was to integrate the new neural network in a class, this way once we create an instance the network is booted and it's always available in that instance, so methods on that instance always use the already booted netwrok, then this class is simply imported in the new process and the newtork is booted up once we create an instance
        - the 'old' character recognition package had to be completely removed,the other endpoint had to be reorganized to use the new character recognitin neural netowrk, the 'old' way was to simply use the old package in the http process to perform the character recognition, but now we need to use the new network, for this I created an rpc request to the new process directly from the endpoint handler, the challenge here is that all the logic had to be rewriten partially in the new process partially in the endpoint handler 
    Thinking further:
        - It was not requested but I also integrated a grayscale image processing logic, it helps character recognition solutions to perform better, I did this in a configurable way for the main config file, this way we have the option to test which way the new network performs better


    3) - the websocket single connection problem 
    
    4) - speeding up websockert restart server 
    
    5) - stauts api -> awesome project
    
    6) - multiple ocr integration to read cyrillic and rusian latin letters
    
    7) - standardized CV ocr API 
    
    8) - speecDetection integration